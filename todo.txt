get rid of accessing the inner of the data structure
document all functions, use export and get rid of exporting everything (pay attention to S3Export)
toxicity (sars) -> vignette
differential expression testing (simulation about being more sensitive for short term changes, simulation about changed synthesis or degradation; real data)
kinetics (simulation, three fits (show unbiased), show deviation + CI; SARS data, show rmse; NXF1 data, lets see; llr test, sars and nxf1)
Test R version 3 and 4!
Add testing (at least for loading the example data and checking some things including whether coldata consists of factors etc)
Estimate changes of kinetic parameters for SARS (and the t0)
Get rid of diffexp entry in the data structure; append .New etc to the name (just like the FitKinetics does for conditions)
do not use opt$xapply!

Show by simulation that a change in the RNA stability also affects new RNA, and that using PairwiseRegulation does not pick up a change in synthesis
Half-life vs. sigma factor (i.e. new RNA changes with this factor upon effect on RNA stability): plot(log(2)/(-1/2*log(F)),log(F)/(1-F),xlim=c(0,5),type='l')
PairwiseRegulation: How to combine replicates? Generate lfc_s vs lfc_HL plot (PlotScatter(data.frame(log2(s.A/s.B),log2(d.B/d.A))))

1h labeling: effective labeling starts later, thus, any changes happening early are also visible in old RNA (example: TWNK in MYC data), i.e. a gene with lower s appears to have lower HL as well (which is not the case); in other words: old RNA is to some degree contaminated with new RNA (and the extent of contamination is gene specific, as it depends on the gene NTR). This can in principle be corrected for: under steady-state: ntr'=1-(1-ntr)^(t'/t), ntr is the uncorrected ntr for effective labeling time t, ntr' is the corrected ntr for actual labeling time t' (i.e., if 1h labeling, but effectively only 1/2h, then 1-(1-ntr)^2) t'/t can be found by assumptions (e.g. median HL=5h, genes that are transcriptionally regulated by not by HL, etc.).
Spoiler: The tbbinom model takes care of this


All functions that take a columns parameter should use the substitute -> eval mechanism on Coldata(data)!
